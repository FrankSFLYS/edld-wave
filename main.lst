C51 COMPILER V9.01   MAIN                                                                  07/11/2018 18:21:46 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: G:\Keil\k4\C51\BIN\C51.EXE src\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(main.obj)

line level    source

   1          /**********************************************************************
   2          @Author: frank.xin
   3          @Date  : 7/11/2018
   4          File name : main.c
   5          File target: STC89C52 with PCF8591 ADDA Converter
   6          Approach  : To generate a series of waves including sin(SIN),
   7          triangle(TRI), sawtooth(SAW), square(SQR) whose amplitude and their
   8          frequency can be adjusted by pressing keys. Details can be found at
   9          http://frank.xin/edld
  10          **********************************************************************/
  11          #include <reg52.h>
  12          #include <intrins.h>
  13          #include "timer.h"
  14          #include "key.h"
  15          #include "pcf8591.h"
  16          
  17          #define MODE_SIN KEY_SIN
  18          #define MODE_TRI KEY_TRI
  19          #define MODE_SAW KEY_SAW
  20          #define MODE_SQR KEY_SQR
  21          #define WAVE_SIZE 32
  22          #define MAX_VOLT ((float)5.0)
  23          #define DEFAULT_TL (65536-251)%256
  24          #define DEFAULT_TH (65536-251)/256
  25          #define FREQUENCY_STEP_R 28
  26          #define FREQUENCY_STEP_A 7
  27          
  28          // Generate sin waveForm
  29          void genSin();
  30          // Generate Triangle waveForm
  31          void genTri();
  32          // Generate Sawtooth waveForm
  33          void genSaw();
  34          // Generate Square waveForm
  35          void genSqr();
  36          
  37          // index of indexing waveForm
  38          unsigned char index;
  39          
  40          unsigned char i;
  41          unsigned char keyCode;
  42          unsigned int initValue;
  43          unsigned int tlValue, thValue;
  44          float voltage;
  45          
  46          void (*generater)(void);
  47          
  48          // Table of sin wave
  49          unsigned char sin[] = {
  50              //128,176,218,245,255,245,218,176,128,79,37,10,0,10,37,79
  51              128, 152, 176, 198, 218, 234, 245, 253,
  52              255, 253, 245, 234, 218, 198, 176, 152,
  53              128, 103,  79,  57,  37,  21,  10,   2,  
  54                0,   2,  10,  21,  37,  57,  79, 103
  55          };
C51 COMPILER V9.01   MAIN                                                                  07/11/2018 18:21:46 PAGE 2   

  56          
  57          volatile unsigned char waveForm[WAVE_SIZE];
  58          
  59          void init() {
  60   1          Init_Timer0();
  61   1          DACStart();
  62   1          P1 = 0xfe;
  63   1          voltage = 5.0;
  64   1          initValue = 251;
  65   1          tlValue = (65536-initValue)%256;
  66   1          thValue = (65536-initValue)/256;
  67   1          generater = genSin;
  68   1          generater();
  69   1      }
  70          void main() {
  71   1          init();
  72   1          while(1) {
  73   2              keyCode = mKeyScan();
  74   2              switch(keyCode) {
  75   3                  case KEY_NULL:
  76   3                      break;
  77   3                  case KEY_ONOFF:
  78   3                      break;
  79   3                  case KEY_SIN:
  80   3                      generater = genSin;
  81   3                      break;
  82   3                  case KEY_SQR:
  83   3                      generater = genSqr;
  84   3                      break;
  85   3                  case KEY_SAW:
  86   3                      generater = genSaw;
  87   3                      break;
  88   3                  case KEY_TRI:
  89   3                      generater = genTri;
  90   3                      break;
  91   3                  case KEY_FRE_R_ADD:
  92   3                      initValue -= FREQUENCY_STEP_R;
  93   3                      break;
  94   3                  case KEY_FRE_R_SUB:
  95   3                      initValue += FREQUENCY_STEP_R;
  96   3                      break;
  97   3                  case KEY_FRE_A_ADD:
  98   3                      initValue -= FREQUENCY_STEP_A;
  99   3                      break;
 100   3                  case KEY_FRE_A_SUB:
 101   3                      initValue += FREQUENCY_STEP_A;
 102   3                      break;
 103   3                  case KEY_AMP_R_ADD:
 104   3                      voltage += 0.1;
 105   3                      break;
 106   3                  case KEY_AMP_R_SUB:
 107   3                      voltage -= 0.1;
 108   3                      break;
 109   3                  case KEY_AMP_A_ADD:
 110   3                      voltage += 0.01;
 111   3                      break;
 112   3                  case KEY_AMP_A_SUB:
 113   3                      voltage -= 0.01;
 114   3                      break;
 115   3                  default:
 116   3                      break;
 117   3              }
C51 COMPILER V9.01   MAIN                                                                  07/11/2018 18:21:46 PAGE 3   

 118   2              if(voltage < 0) {
 119   3                  voltage = 0.1;
 120   3              }
 121   2              if(voltage > 5.0) {
 122   3                  voltage = 5.0;
 123   3              }
 124   2              if(initValue < 251) {
 125   3                  initValue = 251;
 126   3              }
 127   2              if(initValue > 65534) {
 128   3                  initValue = 65534;
 129   3              }
 130   2              tlValue = (65536-initValue)%256;
 131   2              thValue = (65536-initValue)/256;
 132   2              generater();
 133   2          }
 134   1      }
 135          
 136          void onTimer0() interrupt 1 {
 137   1              TL0 = tlValue;   // 200 Hz for sin wave
 138   1              TH0 = thValue;   // 200 Hz for sin wave
 139   1          index ++;
 140   1          if(index == WAVE_SIZE) {
 141   2              index = 0;
 142   2          }
 143   1          ContinuesSend(waveForm[index]);
 144   1      }
 145          
 146          void genSaw() {
 147   1          for(i = 0; i < WAVE_SIZE; i++) {
 148   2              waveForm[i] = i*(255/WAVE_SIZE)*(voltage/MAX_VOLT);
 149   2          }
 150   1      }
 151          
 152          void genSin() {
 153   1          for(i = 0; i < WAVE_SIZE; i++) {
 154   2              waveForm[i] = sin[i]*(voltage/MAX_VOLT);
 155   2          }
 156   1      }
 157          
 158          void genSqr() {
 159   1          for(i = 0; i < WAVE_SIZE/2; i++) {
 160   2              waveForm[i] = (255)*(voltage/MAX_VOLT);
 161   2          }
 162   1          for(i = WAVE_SIZE/2; i < WAVE_SIZE; i++) {
 163   2              waveForm[i] = 0;
 164   2          }
 165   1      }
 166          
 167          void genTri() {
 168   1          for(i = 0; i < WAVE_SIZE/2; i++) {
 169   2              waveForm[i] = (WAVE_SIZE/2 + i*(255/WAVE_SIZE*2))*(voltage/MAX_VOLT);
 170   2          }
 171   1          for(i = WAVE_SIZE/2; i < WAVE_SIZE; i++) {
 172   2              waveForm[i] = 255*(voltage/MAX_VOLT) - waveForm[i - WAVE_SIZE/2];
 173   2          }
 174   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    998    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.01   MAIN                                                                  07/11/2018 18:21:46 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     80    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
